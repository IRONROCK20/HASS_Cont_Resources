const express = require('express');
const bodyParser = require('body-parser');
const fs = require('fs');
const axios = require('axios');

const app = express();
app.use(bodyParser.json());

const SUPERVISOR_URL = 'http://supervisor';
const TOKEN = process.env.SUPERVISOR_TOKEN;
const SLUG  = 'container_limiter';

// Helper to call Supervisor API
function supRequest(method, path, data) {
  return axios({
    method,
    url: `${SUPERVISOR_URL}/addons/${SLUG}${path}`,
    headers: { Authorization: `Bearer ${TOKEN}` },
    data
  });
}

// GET current options
app.get('/api/options', async (req, res) => {
  try {
    const content = fs.readFileSync('/data/options.json');
    res.json(JSON.parse(content));
  } catch (err) {
    res.status(500).send(err.toString());
  }
});

// POST updated options
app.post('/api/options', async (req, res) => {
  try {
    await supRequest('patch', '/options', req.body);
    res.sendStatus(200);
  } catch (err) {
    res.status(500).send(err.toString());
  }
});

// GET available containers
app.get('/api/containers', async (req, res) => {
  const { data } = await supRequest('get', '');
  // Filter Supervisor-managed containers
  const containers = data.addons.map(addon => addon.slug);
  res.json(containers);
});

app.listen(3000, () => {
  console.log('API listening on port 3000');
});
